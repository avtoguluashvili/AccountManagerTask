@page "/accounts/create"
@using AccountManager.Domain.Entities
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json
@inject HttpClient Http

@inject NavigationManager Nav

<div class="container my-4">
    <div class="card">
        <div class="card-header bg-info text-white">
            <h3 class="card-title mb-0">Create New Account</h3>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }

            <EditForm Model="model" OnValidSubmit="@CreateAccountAsync">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Company Name</label>
                    <InputText class="form-control" @bind-Value="model.CompanyName" />
                    <ValidationMessage For="@(() => model.CompanyName)" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Country</label>
                    <InputText class="form-control" @bind-Value="model.Country" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Subscription</label>
                    <select class="form-select" @bind="selectedSubscriptionId">
                        @if (subscriptions != null)
                        {
                            @foreach (var s in subscriptions)
                            {
                                <option value="@s.SubscriptionId">@s.Description</option>
                            }
                        }
                    </select>
                </div>
                <div class="text-end">
                    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                    <button class="btn btn-primary ms-2" type="submit">Create</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private readonly Account model = new();
    private List<Subscription>? subscriptions;
    private int selectedSubscriptionId;
    private string errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            subscriptions = await Http.GetFromJsonAsync<List<Subscription>>("api/Subscription");
            // pick default subscription if one is flagged IsDefault
            if (subscriptions != null && subscriptions.Any(x => x.IsDefault))
            {
                selectedSubscriptionId = subscriptions.First(x => x.IsDefault).SubscriptionId;
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private async Task CreateAccountAsync()
    {
        try
        {
            errorMessage = "";
            var resp = await Http.PostAsJsonAsync($"api/Accounts?subscriptionId={selectedSubscriptionId}", model);
            if (resp.IsSuccessStatusCode)
                Nav.NavigateTo("/accounts");
            else
                errorMessage = await resp.Content.ReadAsStringAsync();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private void Cancel()
    {
        Nav.NavigateTo("/accounts");
    }
}
